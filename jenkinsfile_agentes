pipeline {
    agent none
    stages {
        stage('GetCode') {
            agent {label 'master'}
            steps {
                sh 'whoami'
                sh 'hostname'
                git url: "https://github.com/Trophicdiamond/unir_aws.git", branch: "develop"
                sh 'wget https://github.com/Trophicdiamond/todo-aws-list-config/blob/staging/samconfigci.toml'
                stash name: 'gitcode', includes: '**/*'
            }
        }
            
                stage('Test') {
                    agent {label 'worker1'}
                    steps {
                        unstash 'gitcode'
                        sh 'whoami'
                        sh 'hostname'
                        sh'''
                        python3 -m flake8 --exit-zero --format=pylint src > flake8.out
                        bandit -r src -f custom -o bandit.out --msg-template "{abspath}:{line}: [{test_id}] {msg}" || true
                        '''
                        recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')]
                        recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')]
                        
                        }
                    }
                

                stage('Deploy') {
                    agent {label 'master'}
                    steps{
                        sh 'whoami'
                        sh 'hostname'
                        sh'''
                        sam deploy --stack-name todo-list-aws --region us-east-1 --s3-bucket aws-sam-cli-managed-default-samclisourcebucket-dyzcvqe7z2c8 --capabilities CAPABILITY_IAM --parameter-overrides Stage=staging --no-fail-on-empty-changeset
                        '''
                    }
                }

                stage('Pruebas Rest') {
                    agent {label 'worker2'}
                    steps{
                        sh 'whoami'
                        sh 'hostname'
                        unstash 'gitcode'
                        sh '''
                        export BASE_URL='https://6xidje5ql5.execute-api.us-east-1.amazonaws.com/Prod'
                        export PYTHONPATH="${WORKSPACE}"
                        python3 -m pytest -m api --junitxml=result.xml test/integration/todoApiTest.py
                        '''
                        junit 'result.xml'
                        
                    }
                }

                stage('Promote') {
                    agent {label 'master'}
                    steps {
                        sh 'whoami'
                        sh 'hostname'
                        withCredentials([usernamePassword(credentialsId: 'github-creds', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                        sh 'git config --global user.email "chrpansan@gmail.com"'
                        sh 'git config --global user.name "Trophicdiamond"'
                        sh 'git checkout master'
                        sh 'git merge develop'
                        sh 'git push https://${GIT_USER}:${GIT_PASSWORD}@github.com/Trophicdiamond/unir_aws.git master'
                    }
                }
            }
        
    

        stage('CleanAgents') {
            parallel {
                stage('Clean1') {
                    agent {label 'worker1'}
                    steps {
                        sh 'whoami'
                        sh 'hostname'
                        deleteDir()
                    }
                }
                stage('Clean2') {
                    agent {label 'worker2'}
                    steps{
                        sh 'whoami'
                        sh 'hostname'
                        deleteDir()
                    }
                }
            }
        }
    }
}
